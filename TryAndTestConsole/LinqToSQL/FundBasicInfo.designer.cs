#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.18033
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace TryAndTestConsole.LinqToSQL
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="MyUsefulTools")]
	public partial class FundBasicInfoDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region 可扩展性方法定义
    partial void OnCreated();
    partial void InsertFundBasicInfo(FundBasicInfo instance);
    partial void UpdateFundBasicInfo(FundBasicInfo instance);
    partial void DeleteFundBasicInfo(FundBasicInfo instance);
    partial void InsertCurrencyFundDailyRevenue(CurrencyFundDailyRevenue instance);
    partial void UpdateCurrencyFundDailyRevenue(CurrencyFundDailyRevenue instance);
    partial void DeleteCurrencyFundDailyRevenue(CurrencyFundDailyRevenue instance);
    #endregion
		
		public FundBasicInfoDataContext() : 
				base(global::TryAndTestConsole.Properties.Settings.Default.MyUsefulToolsConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public FundBasicInfoDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public FundBasicInfoDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public FundBasicInfoDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public FundBasicInfoDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<FundBasicInfo> FundBasicInfo
		{
			get
			{
				return this.GetTable<FundBasicInfo>();
			}
		}
		
		public System.Data.Linq.Table<CurrencyFundDailyRevenue> CurrencyFundDailyRevenue
		{
			get
			{
				return this.GetTable<CurrencyFundDailyRevenue>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FundBasicInfo")]
	public partial class FundBasicInfo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _FundId;
		
		private string _FundName;
		
		private string _FundType;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFundIdChanging(string value);
    partial void OnFundIdChanged();
    partial void OnFundNameChanging(string value);
    partial void OnFundNameChanged();
    partial void OnFundTypeChanging(string value);
    partial void OnFundTypeChanged();
    #endregion
		
		public FundBasicInfo()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FundId", DbType="NChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string FundId
		{
			get
			{
				return this._FundId;
			}
			set
			{
				if ((this._FundId != value))
				{
					this.OnFundIdChanging(value);
					this.SendPropertyChanging();
					this._FundId = value;
					this.SendPropertyChanged("FundId");
					this.OnFundIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FundName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string FundName
		{
			get
			{
				return this._FundName;
			}
			set
			{
				if ((this._FundName != value))
				{
					this.OnFundNameChanging(value);
					this.SendPropertyChanging();
					this._FundName = value;
					this.SendPropertyChanged("FundName");
					this.OnFundNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FundType", DbType="NChar(100) NOT NULL", CanBeNull=false)]
		public string FundType
		{
			get
			{
				return this._FundType;
			}
			set
			{
				if ((this._FundType != value))
				{
					this.OnFundTypeChanging(value);
					this.SendPropertyChanging();
					this._FundType = value;
					this.SendPropertyChanged("FundType");
					this.OnFundTypeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CurrencyFundDailyRevenue")]
	public partial class CurrencyFundDailyRevenue : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _FundId;
		
		private System.DateTime _RevenueDate;
		
		private double _Revenue10Thousand;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFundIdChanging(string value);
    partial void OnFundIdChanged();
    partial void OnRevenueDateChanging(System.DateTime value);
    partial void OnRevenueDateChanged();
    partial void OnRevenue10ThousandChanging(double value);
    partial void OnRevenue10ThousandChanged();
    #endregion
		
		public CurrencyFundDailyRevenue()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FundId", DbType="NChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string FundId
		{
			get
			{
				return this._FundId;
			}
			set
			{
				if ((this._FundId != value))
				{
					this.OnFundIdChanging(value);
					this.SendPropertyChanging();
					this._FundId = value;
					this.SendPropertyChanged("FundId");
					this.OnFundIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RevenueDate", DbType="Date NOT NULL", IsPrimaryKey=true)]
		public System.DateTime RevenueDate
		{
			get
			{
				return this._RevenueDate;
			}
			set
			{
				if ((this._RevenueDate != value))
				{
					this.OnRevenueDateChanging(value);
					this.SendPropertyChanging();
					this._RevenueDate = value;
					this.SendPropertyChanged("RevenueDate");
					this.OnRevenueDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Revenue10Thousand", DbType="Float NOT NULL")]
		public double Revenue10Thousand
		{
			get
			{
				return this._Revenue10Thousand;
			}
			set
			{
				if ((this._Revenue10Thousand != value))
				{
					this.OnRevenue10ThousandChanging(value);
					this.SendPropertyChanging();
					this._Revenue10Thousand = value;
					this.SendPropertyChanged("Revenue10Thousand");
					this.OnRevenue10ThousandChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
